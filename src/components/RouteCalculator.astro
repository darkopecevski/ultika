---
import { destinations, routes, getAllCountries } from '../data/routes';

// Group destinations by country for better UX
const countries = getAllCountries();
const destinationsByCountry = countries.map(country => ({
  country,
  destinations: destinations.filter(d => d.country === country)
}));
---

<div class="bg-white rounded-lg shadow-xl p-8">
  <h3 class="text-2xl font-bold mb-2">Find Your Route</h3>
  <p class="text-gray-600 mb-6">Search for transfers between any two destinations</p>

  <form id="route-calculator" class="space-y-6">
    <!-- From Location -->
    <div>
      <label for="from-location" class="block text-sm font-semibold text-gray-700 mb-2">
        From
      </label>
      <select
        id="from-location"
        name="from"
        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#D4AF37] focus:border-transparent"
        required
      >
        <option value="">Select starting point...</option>
        {destinationsByCountry.map(({ country, destinations: dests }) => (
          <optgroup label={country}>
            {dests.map(dest => (
              <option value={dest.id}>
                {dest.name}{dest.nameAlt ? ` (${dest.nameAlt})` : ''}
              </option>
            ))}
          </optgroup>
        ))}
      </select>
    </div>

    <!-- Swap Button -->
    <div class="flex justify-center">
      <button
        type="button"
        id="swap-locations"
        class="p-2 rounded-full hover:bg-gray-100 transition-colors duration-200"
        title="Swap locations"
      >
        <svg class="w-6 h-6 text-[#D4AF37]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4" />
        </svg>
      </button>
    </div>

    <!-- To Location -->
    <div>
      <label for="to-location" class="block text-sm font-semibold text-gray-700 mb-2">
        To
      </label>
      <select
        id="to-location"
        name="to"
        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#D4AF37] focus:border-transparent"
        required
      >
        <option value="">Select destination...</option>
        {destinationsByCountry.map(({ country, destinations: dests }) => (
          <optgroup label={country}>
            {dests.map(dest => (
              <option value={dest.id}>
                {dest.name}{dest.nameAlt ? ` (${dest.nameAlt})` : ''}
              </option>
            ))}
          </optgroup>
        ))}
      </select>
    </div>

    <!-- Search Button -->
    <button
      type="submit"
      class="w-full btn btn-gold text-black py-4 text-lg font-semibold"
    >
      Search Route
    </button>
  </form>

  <!-- Popular Routes -->
  <div class="mt-8 pt-8 border-t border-gray-200">
    <h4 class="text-lg font-bold mb-4">Popular Routes</h4>
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
      {routes.filter(r => r.popular).slice(0, 6).map(route => {
        const from = destinations.find(d => d.id === route.from);
        const to = destinations.find(d => d.id === route.to);
        return (
          <a
            href={`/routes/${route.from}-to-${route.to}`}
            class="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors duration-200 group"
          >
            <div class="flex items-center text-sm">
              <svg class="w-4 h-4 text-[#D4AF37] mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
              <span class="font-medium">{from?.name}</span>
              <span class="mx-2 text-gray-400">â†’</span>
              <span class="font-medium">{to?.name}</span>
            </div>
            <svg class="w-4 h-4 text-gray-400 group-hover:text-[#D4AF37] transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        );
      })}
    </div>
  </div>
</div>

<script define:vars={{ routesData: routes, destinationsData: destinations }}>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle form submission
    const form = document.getElementById('route-calculator');

    if (form) {
      form.addEventListener('submit', function(e) {
        e.preventDefault();

        const fromSelect = document.getElementById('from-location');
        const toSelect = document.getElementById('to-location');

        const fromId = fromSelect.value;
        const toId = toSelect.value;

        if (!fromId || !toId) {
          return;
        }

        if (fromId === toId) {
          alert('Please select different locations for departure and destination.');
          return;
        }

        // Always redirect to route page (will be generated dynamically)
        window.location.href = '/routes/' + fromId + '-to-' + toId;
      });
    }

    // Handle swap button
    const swapBtn = document.getElementById('swap-locations');
    if (swapBtn) {
      swapBtn.addEventListener('click', function() {
        const fromSelect = document.getElementById('from-location');
        const toSelect = document.getElementById('to-location');

        const temp = fromSelect.value;
        fromSelect.value = toSelect.value;
        toSelect.value = temp;
      });
    }
  });
</script>
